// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * Body_login_api_v1_auth_login_post
 */
export type BodyLoginApiV1AuthLoginPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * Body_refresh_access_token_api_v1_auth_refresh_post
 */
export type BodyRefreshAccessTokenApiV1AuthRefreshPost = {
    /**
     * Refresh Token
     */
    refresh_token: string;
};

/**
 * EventRead
 */
export type EventRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Run Id
     */
    run_id: string;
    type: EventType;
    /**
     * Message
     */
    message?: string | null;
    /**
     * Payload
     */
    payload: {
        [key: string]: unknown;
    };
    /**
     * At
     */
    at: string;
};

/**
 * EventType
 */
export type EventType = 'status' | 'log' | 'step_start' | 'step_end' | 'checkpoint' | 'prompt' | 'artifact' | 'screenshot' | 'error';

/**
 * FlowListResponse
 */
export type FlowListResponse = {
    /**
     * Flows
     */
    flows: Array<FlowRead>;
};

/**
 * FlowRead
 */
export type FlowRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Key
     */
    key: string;
    /**
     * Name
     */
    name: string;
    /**
     * Description
     */
    description?: string | null;
    /**
     * Config
     */
    config?: {
        [key: string]: unknown;
    };
    /**
     * Created By
     */
    created_by: string;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * RunContinue
 */
export type RunContinue = {
    /**
     * Input Payload
     */
    input_payload?: {
        [key: string]: unknown;
    } | null;
    /**
     * Notes
     */
    notes?: string | null;
};

/**
 * RunCreate
 */
export type RunCreate = {
    /**
     * Flow Id
     */
    flow_id: string;
};

/**
 * RunCreateResponse
 */
export type RunCreateResponse = {
    /**
     * Id
     */
    id: string;
    /**
     * Flow Id
     */
    flow_id: string;
    /**
     * User Id
     */
    user_id: string;
    status: RunStatus;
    /**
     * Started At
     */
    started_at?: string | null;
    /**
     * Ended At
     */
    ended_at?: string | null;
    /**
     * Error
     */
    error?: string | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
    /**
     * Session Url
     */
    session_url?: string | null;
};

/**
 * RunRead
 */
export type RunRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Flow Id
     */
    flow_id: string;
    /**
     * User Id
     */
    user_id: string;
    status: RunStatus;
    /**
     * Started At
     */
    started_at?: string | null;
    /**
     * Ended At
     */
    ended_at?: string | null;
    /**
     * Error
     */
    error?: string | null;
    /**
     * Result Uri
     */
    result_uri?: string | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
};

/**
 * RunStatus
 */
export type RunStatus = 'pending' | 'running' | 'awaiting_input' | 'completed' | 'failed';

/**
 * RunUpdate
 */
export type RunUpdate = {
    /**
     * Result Uri
     */
    result_uri?: string | null;
    status?: RunStatus | null;
    /**
     * Error
     */
    error?: string | null;
    /**
     * Ended At
     */
    ended_at?: string | null;
};

/**
 * SessionRead
 */
export type SessionRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Run Id
     */
    run_id: string;
    /**
     * Browser Provider Session Id
     */
    browser_provider_session_id?: string | null;
    status: SessionStatus;
    /**
     * Session Url
     */
    session_url?: string | null;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Ended At
     */
    ended_at?: string | null;
};

/**
 * SessionStatus
 */
export type SessionStatus = 'starting' | 'active' | 'paused' | 'ended';

/**
 * Token
 * Token response model.
 */
export type Token = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Refresh Token
     */
    refresh_token: string;
    /**
     * Token Type
     */
    token_type?: string;
    /**
     * Expires In
     */
    expires_in: number;
    /**
     * Refresh Expires In
     */
    refresh_expires_in: number;
    /**
     * Access Token Expires At
     */
    access_token_expires_at: string;
    /**
     * Refresh Token Expires At
     */
    refresh_token_expires_at: string;
};

/**
 * UpdateUserRole
 */
export type UpdateUserRole = {
    new_role: UserRole;
};

/**
 * UserCreate
 */
export type UserCreate = {
    /**
     * Email
     */
    email: string;
    /**
     * Name
     */
    name?: string | null;
    /**
     * Password
     */
    password: string;
    role?: UserRole;
};

/**
 * UserRead
 */
export type UserRead = {
    /**
     * Id
     */
    id: string;
    /**
     * Email
     */
    email: string;
    /**
     * Name
     */
    name?: string | null;
    role: UserRole;
    /**
     * Created At
     */
    created_at: string;
    /**
     * Updated At
     */
    updated_at: string;
};

/**
 * UserRole
 */
export type UserRole = 'user' | 'admin';

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

/**
 * WebLoginResponse
 * Response model for web client login.
 */
export type WebLoginResponse = {
    /**
     * Message
     */
    message: string;
    user: WebLoginUser;
};

/**
 * WebLoginUser
 * User data returned in web login response.
 */
export type WebLoginUser = {
    /**
     * Email
     */
    email: string;
    role: UserRole;
};

export type ListRunsApiV1RunsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip
         */
        skip?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/api/v1/runs';
};

export type ListRunsApiV1RunsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListRunsApiV1RunsGetError = ListRunsApiV1RunsGetErrors[keyof ListRunsApiV1RunsGetErrors];

export type ListRunsApiV1RunsGetResponses = {
    /**
     * Response List Runs Api V1 Runs Get
     * Successful Response
     */
    200: Array<RunRead>;
};

export type ListRunsApiV1RunsGetResponse = ListRunsApiV1RunsGetResponses[keyof ListRunsApiV1RunsGetResponses];

export type CreateRunApiV1RunsPostData = {
    body: RunCreate;
    path?: never;
    query?: never;
    url: '/api/v1/runs';
};

export type CreateRunApiV1RunsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateRunApiV1RunsPostError = CreateRunApiV1RunsPostErrors[keyof CreateRunApiV1RunsPostErrors];

export type CreateRunApiV1RunsPostResponses = {
    /**
     * Successful Response
     */
    201: RunCreateResponse;
};

export type CreateRunApiV1RunsPostResponse = CreateRunApiV1RunsPostResponses[keyof CreateRunApiV1RunsPostResponses];

export type GetRunApiV1RunsRunIdGetData = {
    body?: never;
    path: {
        /**
         * Run Id
         */
        run_id: string;
    };
    query?: never;
    url: '/api/v1/runs/{run_id}';
};

export type GetRunApiV1RunsRunIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRunApiV1RunsRunIdGetError = GetRunApiV1RunsRunIdGetErrors[keyof GetRunApiV1RunsRunIdGetErrors];

export type GetRunApiV1RunsRunIdGetResponses = {
    /**
     * Successful Response
     */
    200: RunRead;
};

export type GetRunApiV1RunsRunIdGetResponse = GetRunApiV1RunsRunIdGetResponses[keyof GetRunApiV1RunsRunIdGetResponses];

export type UpdateRunApiV1RunsRunIdPatchData = {
    body: RunUpdate;
    path: {
        /**
         * Run Id
         */
        run_id: string;
    };
    query?: never;
    url: '/api/v1/runs/{run_id}';
};

export type UpdateRunApiV1RunsRunIdPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateRunApiV1RunsRunIdPatchError = UpdateRunApiV1RunsRunIdPatchErrors[keyof UpdateRunApiV1RunsRunIdPatchErrors];

export type UpdateRunApiV1RunsRunIdPatchResponses = {
    /**
     * Successful Response
     */
    200: RunRead;
};

export type UpdateRunApiV1RunsRunIdPatchResponse = UpdateRunApiV1RunsRunIdPatchResponses[keyof UpdateRunApiV1RunsRunIdPatchResponses];

export type GetRunSessionsApiV1RunsRunIdSessionsGetData = {
    body?: never;
    path: {
        /**
         * Run Id
         */
        run_id: string;
    };
    query?: never;
    url: '/api/v1/runs/{run_id}/sessions';
};

export type GetRunSessionsApiV1RunsRunIdSessionsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRunSessionsApiV1RunsRunIdSessionsGetError = GetRunSessionsApiV1RunsRunIdSessionsGetErrors[keyof GetRunSessionsApiV1RunsRunIdSessionsGetErrors];

export type GetRunSessionsApiV1RunsRunIdSessionsGetResponses = {
    /**
     * Response Get Run Sessions Api V1 Runs  Run Id  Sessions Get
     * Successful Response
     */
    200: Array<SessionRead>;
};

export type GetRunSessionsApiV1RunsRunIdSessionsGetResponse = GetRunSessionsApiV1RunsRunIdSessionsGetResponses[keyof GetRunSessionsApiV1RunsRunIdSessionsGetResponses];

export type GetRunEventsApiV1RunsRunIdEventsGetData = {
    body?: never;
    path: {
        /**
         * Run Id
         */
        run_id: string;
    };
    query?: never;
    url: '/api/v1/runs/{run_id}/events';
};

export type GetRunEventsApiV1RunsRunIdEventsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRunEventsApiV1RunsRunIdEventsGetError = GetRunEventsApiV1RunsRunIdEventsGetErrors[keyof GetRunEventsApiV1RunsRunIdEventsGetErrors];

export type GetRunEventsApiV1RunsRunIdEventsGetResponses = {
    /**
     * Response Get Run Events Api V1 Runs  Run Id  Events Get
     * Successful Response
     */
    200: Array<EventRead>;
};

export type GetRunEventsApiV1RunsRunIdEventsGetResponse = GetRunEventsApiV1RunsRunIdEventsGetResponses[keyof GetRunEventsApiV1RunsRunIdEventsGetResponses];

export type ContinueRunApiV1RunsRunIdContinuePostData = {
    body: RunContinue;
    path: {
        /**
         * Run Id
         */
        run_id: string;
    };
    query?: never;
    url: '/api/v1/runs/{run_id}/continue';
};

export type ContinueRunApiV1RunsRunIdContinuePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ContinueRunApiV1RunsRunIdContinuePostError = ContinueRunApiV1RunsRunIdContinuePostErrors[keyof ContinueRunApiV1RunsRunIdContinuePostErrors];

export type ContinueRunApiV1RunsRunIdContinuePostResponses = {
    /**
     * Successful Response
     */
    200: RunRead;
};

export type ContinueRunApiV1RunsRunIdContinuePostResponse = ContinueRunApiV1RunsRunIdContinuePostResponses[keyof ContinueRunApiV1RunsRunIdContinuePostResponses];

export type GetRunArtifactApiV1RunsRunIdArtifactGetData = {
    body?: never;
    path: {
        /**
         * Run Id
         */
        run_id: string;
    };
    query?: never;
    url: '/api/v1/runs/{run_id}/artifact';
};

export type GetRunArtifactApiV1RunsRunIdArtifactGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRunArtifactApiV1RunsRunIdArtifactGetError = GetRunArtifactApiV1RunsRunIdArtifactGetErrors[keyof GetRunArtifactApiV1RunsRunIdArtifactGetErrors];

export type GetRunArtifactApiV1RunsRunIdArtifactGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RegisterUserApiV1AuthRegisterPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/api/v1/auth/register';
};

export type RegisterUserApiV1AuthRegisterPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterUserApiV1AuthRegisterPostError = RegisterUserApiV1AuthRegisterPostErrors[keyof RegisterUserApiV1AuthRegisterPostErrors];

export type RegisterUserApiV1AuthRegisterPostResponses = {
    /**
     * Successful Response
     */
    201: UserRead;
};

export type RegisterUserApiV1AuthRegisterPostResponse = RegisterUserApiV1AuthRegisterPostResponses[keyof RegisterUserApiV1AuthRegisterPostResponses];

export type LoginApiV1AuthLoginPostData = {
    body: BodyLoginApiV1AuthLoginPost;
    headers?: {
        /**
         * X-Client-Type
         */
        'X-Client-Type'?: 'web' | 'mobile';
    };
    path?: never;
    query?: never;
    url: '/api/v1/auth/login';
};

export type LoginApiV1AuthLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginApiV1AuthLoginPostError = LoginApiV1AuthLoginPostErrors[keyof LoginApiV1AuthLoginPostErrors];

export type LoginApiV1AuthLoginPostResponses = {
    /**
     * Response Login Api V1 Auth Login Post
     * Successful Response
     */
    200: Token | WebLoginResponse;
};

export type LoginApiV1AuthLoginPostResponse = LoginApiV1AuthLoginPostResponses[keyof LoginApiV1AuthLoginPostResponses];

export type RefreshAccessTokenApiV1AuthRefreshPostData = {
    body: BodyRefreshAccessTokenApiV1AuthRefreshPost;
    path?: never;
    query?: never;
    url: '/api/v1/auth/refresh';
};

export type RefreshAccessTokenApiV1AuthRefreshPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RefreshAccessTokenApiV1AuthRefreshPostError = RefreshAccessTokenApiV1AuthRefreshPostErrors[keyof RefreshAccessTokenApiV1AuthRefreshPostErrors];

export type RefreshAccessTokenApiV1AuthRefreshPostResponses = {
    /**
     * Successful Response
     */
    200: Token;
};

export type RefreshAccessTokenApiV1AuthRefreshPostResponse = RefreshAccessTokenApiV1AuthRefreshPostResponses[keyof RefreshAccessTokenApiV1AuthRefreshPostResponses];

export type GetCurrentUserInfoApiV1AuthMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/auth/me';
};

export type GetCurrentUserInfoApiV1AuthMeGetResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type GetCurrentUserInfoApiV1AuthMeGetResponse = GetCurrentUserInfoApiV1AuthMeGetResponses[keyof GetCurrentUserInfoApiV1AuthMeGetResponses];

export type GetAllUsersApiV1AuthUsersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/auth/users';
};

export type GetAllUsersApiV1AuthUsersGetResponses = {
    /**
     * Response Get All Users Api V1 Auth Users Get
     * Successful Response
     */
    200: Array<UserRead>;
};

export type GetAllUsersApiV1AuthUsersGetResponse = GetAllUsersApiV1AuthUsersGetResponses[keyof GetAllUsersApiV1AuthUsersGetResponses];

export type UpdateUserRoleApiV1AuthUsersUserIdRolePatchData = {
    body: UpdateUserRole;
    path: {
        /**
         * User Id
         */
        user_id: string;
    };
    query?: never;
    url: '/api/v1/auth/users/{user_id}/role';
};

export type UpdateUserRoleApiV1AuthUsersUserIdRolePatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserRoleApiV1AuthUsersUserIdRolePatchError = UpdateUserRoleApiV1AuthUsersUserIdRolePatchErrors[keyof UpdateUserRoleApiV1AuthUsersUserIdRolePatchErrors];

export type UpdateUserRoleApiV1AuthUsersUserIdRolePatchResponses = {
    /**
     * Successful Response
     */
    200: UserRead;
};

export type UpdateUserRoleApiV1AuthUsersUserIdRolePatchResponse = UpdateUserRoleApiV1AuthUsersUserIdRolePatchResponses[keyof UpdateUserRoleApiV1AuthUsersUserIdRolePatchResponses];

export type ListFlowsApiV1FlowsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip
         * Number of flows to skip
         */
        skip?: number;
        /**
         * Limit
         * Maximum flows to return
         */
        limit?: number;
    };
    url: '/api/v1/flows';
};

export type ListFlowsApiV1FlowsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ListFlowsApiV1FlowsGetError = ListFlowsApiV1FlowsGetErrors[keyof ListFlowsApiV1FlowsGetErrors];

export type ListFlowsApiV1FlowsGetResponses = {
    /**
     * Successful Response
     */
    200: FlowListResponse;
};

export type ListFlowsApiV1FlowsGetResponse = ListFlowsApiV1FlowsGetResponses[keyof ListFlowsApiV1FlowsGetResponses];

export type GetFlowApiV1FlowsFlowIdGetData = {
    body?: never;
    path: {
        /**
         * Flow Id
         */
        flow_id: string;
    };
    query?: never;
    url: '/api/v1/flows/{flow_id}';
};

export type GetFlowApiV1FlowsFlowIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetFlowApiV1FlowsFlowIdGetError = GetFlowApiV1FlowsFlowIdGetErrors[keyof GetFlowApiV1FlowsFlowIdGetErrors];

export type GetFlowApiV1FlowsFlowIdGetResponses = {
    /**
     * Successful Response
     */
    200: FlowRead;
};

export type GetFlowApiV1FlowsFlowIdGetResponse = GetFlowApiV1FlowsFlowIdGetResponses[keyof GetFlowApiV1FlowsFlowIdGetResponses];

export type HealthCheckHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthCheckHealthGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};
