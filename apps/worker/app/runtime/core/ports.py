"""Hexagonal ports for runtime domain."""

from __future__ import annotations

from typing import Any, Protocol
from uuid import UUID


class Agent(Protocol):
    async def start(self) -> None: ...

    async def stop(self) -> None: ...

    async def open_url(self, url: str) -> None: ...

    async def click(self, selector: str) -> None: ...

    async def type(self, selector: str, text: str, *, clear: bool = False) -> None: ...

    async def wait_for(self, selector: str, *, timeout_ms: int = 10000) -> None: ...

    async def extract(self, selector: str, *, attr: str | None = None) -> Any: ...

    async def screenshot(self, name: str) -> str: ...


class SessionProvider(Protocol):
    async def attach_to_session(self, run_id: UUID) -> None: ...

    async def close_session(self, run_id: UUID) -> None: ...

    def get_session_status(self, run_id: UUID) -> dict[str, Any] | None: ...

    def get_session_info(self, run_id: UUID) -> dict[str, Any] | None: ...


class EventBus(Protocol):
    async def emit(self, event: str, payload: dict[str, Any]) -> None: ...
